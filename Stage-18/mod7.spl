//scheduler
loadi(50,63);
loadi(51,64);
//init
loadi(65,7);
loadi(66,8);
//int9
loadi(20,33);
loadi(21,34);
//disk interrupt
loadi(6,19);
loadi(7,20);
//module1
loadi(42,55);
loadi(43,56);
//module2
loadi(44,57);
loadi(45,58);
//loading inode table
loadi(59,3);
loadi(60,4);

loadi(14,27);
loadi(15,28);

loadi(8,21);
loadi(9,22);

loadi(40,53);
loadi(41,54);

loadi(48,61);
loadi(49,62);

[TERMINAL_STATUS_TABLE]=0;
[DISK_STATUS_TABLE]=0;
//exit
loadi(22,35);
loadi(23,36);

loadi(2, 15);
loadi(3, 16);
//exception
loadi(63,13);
loadi(64,14);
//library
loadi(4,17);
loadi(5,18);
//timer
loadi(16,29);
loadi(17,30);
//int 7

//idle
loadi(69,11);
loadi(70,12);
PTBR=PAGE_TABLE_BASE+20;

PTLR = 10;
//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";




////Setting the user area page number
[PROCESS_TABLE + 11+16] = 80;


//process id
[PROCESS_TABLE + 17]= 1;


//running status of process
[PROCESS_TABLE + 20]=CREATED;
[PROCESS_TABLE + 20+16]=TERMINATED;
[PROCESS_TABLE + 20+16*2]=TERMINATED;

[PROCESS_TABLE + 20+16*3]=TERMINATED;
[PROCESS_TABLE + 20+16*4]=TERMINATED;
[PROCESS_TABLE + 20+16*14]=TERMINATED;
[PROCESS_TABLE + 20+16*5]=TERMINATED;
[PROCESS_TABLE + 20+16*6]=TERMINATED;
[PROCESS_TABLE + 20+16*7]=TERMINATED;
[PROCESS_TABLE + 20+16*8]=TERMINATED;
[PROCESS_TABLE + 20+16*9]=TERMINATED;
[PROCESS_TABLE + 20+16*10]=TERMINATED;
[PROCESS_TABLE + 20+16*11]=TERMINATED;
[PROCESS_TABLE + 20+16*12]=TERMINATED;
[PROCESS_TABLE + 20+16*13]=TERMINATED;

//uptr
[PROCESS_TABLE + 13+ 16] = 8*512;


//kptr
[PROCESS_TABLE + 12+16] = 0;


// ptbr and ptlr
[PROCESS_TABLE + 14+16] = PAGE_TABLE_BASE+20;
[PROCESS_TABLE + 15+16] = 10;

[76*512] = [65 * 512 + 1];//user stack top add=code first word
alias i R0;
i=0;
while(i<82) do
	[MEMORY_FREE_LIST+i]=1;
	i=i+1;
endwhile;
while(i<128) do
	[MEMORY_FREE_LIST+i]=0;
	i=i+1;
endwhile;
[SYSTEM_STATUS_TABLE+3]=0;
[SYSTEM_STATUS_TABLE+2]=45;
return;
